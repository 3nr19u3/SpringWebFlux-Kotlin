name: CI

on:
  push:
    branches:
      - '**'  # Trigger on any branch
  pull_request:
    branches:
      - '**'  # Trigger on pull requests

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 30s
          --health-retries 5
        ports:
          - 27017:27017

    strategy:
      matrix:
        module: [spring-boot-webflux-apirest, spring-boot-webflux-client, spring-boot-webflux-eureka-server, spring-boot-webflux-thymeleaf]  # Nombres de tus m贸dulos

    steps:
      - name: Cleanup old containers
        run: |
          docker rm -f $(docker ps -aq) || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Especifica la versi贸n de Java que usas
          distribution: 'temurin'

      - name: Build and test
        run: |
          cd ${{ matrix.module }}
          mvn clean install

      - name: Upload Test Results
        if: success()  # Solo si la compilaci贸n es exitosa
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.module }}
          path: ${{ matrix.module }}/target/surefire-reports  # Ruta a los reportes de pruebas

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && success()  # Solo si el job build es exitoso y estamos en main

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Especifica la versi贸n de Java que usas
          distribution: 'temurin'

      - name: Deploy to production
        run: |
          mvn deploy -DskipTests

