name: CI to main (Skip tests)

on:
  push:
    branches:
      - '**'  # Trigger on any branch
  pull_request:
    branches:
      - 'main'  # Trigger on pull requests

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test
        options: >-
          --health-cmd "mongod --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    strategy:
      matrix:
        module: [spring-boot-webflux-thymeleaf, spring-boot-webflux-client, spring-boot-webflux-eureka-server, spring-boot-webflux-apirest ]  # Modules names

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Java version
          distribution: 'temurin'

      # Build and test each module
      - name: Build and test spring-boot-webflux-thymeleaf
        run: mvn -f spring-boot-webflux-thymeleaf/pom.xml clean install
        working-directory: ./spring-boot-webflux-thymeleaf/

      - name: Build and test spring-boot-webflux-client
        run: mvn -f spring-boot-webflux-client/pom.xml clean install
        working-directory: ./spring-boot-webflux-client/

      - name: Build and test spring-boot-webflux-eureka-server
        run: mvn -f spring-boot-webflux-eureka-server/pom.xml clean install
        working-directory: ./spring-boot-webflux-eureka-server/

      - name: Build and test spring-boot-webflux-apirest
        working-directory: ./spring-boot-webflux-apirest/
        run: |
          docker run --name mongo -d -p 27017:27017 mongo:latest
          sleep 20
          mvn -f spring-boot-webflux-apirest/pom.xml clean install
          docker stop mongo
          docker rm mongo

      - name: Upload Test Results
        if: success()  # Only if the compilation process is successfully
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.module }}
          path: ${{ matrix.module }}/target/surefire-reports  # Path to test reports

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && success()  # Only if the job build process was successfully and we are on main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Java version
          distribution: 'temurin'

      - name: Deploy to production
        run: |
          mvn deploy -DskipTests

